fastlane_version "2.23.0"

default_platform :ios

skip_docs

platform :ios do

  product_name = "RSSReader"
  env_build_dir = ENV["BUILD_DIR"]
  build_dir = env_build_dir ? env_build_dir : "build"
  versioned_product_name = product_name + "-" + number_of_commits.to_s
  archive_path = build_dir + "/" + versioned_product_name
  derived_data_path = build_dir + "/DerivedData"

  before_all do
    setup_jenkins(derived_data_path: derived_data_path, output_directory: build_dir, force: true)
    skip_docs
  end

  private_lane :build_and_archive do |options|
    export_method = options[:export_method]
    provisioning_profile = options[:provisioning_profile]
    gym(
      scheme: product_name,
      output_name: versioned_product_name,
      archive_path: archive_path,
      configuration: "Release",
      export_method: export_method,
      buildlog_path: build_dir,
      export_options: {
        provisioningProfiles: { 
          "com.grigorye.RSSReader" => provisioning_profile,
        }
      }
  )
  end

  lane :icon do |options|
    appicon(
      appicon_image_file: "AppIcon.png",
      appicon_path: product_name + "/" + "product_name" + "/Assets.xcassets",
      appicon_devices: [:iphone, :ipad]
    )
  end

  lane :developer do |options|
    build_and_archive(export_method: "development", provisioning_profile: "RSSReader Development")
  end

  lane :fabric do |options|
    build_and_archive(export_method: "development", provisioning_profile: "RSSReader Development")
    crashlytics
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do |options|
    build_and_archive(export_method: "app-store", provisioning_profile: "RSSReader Distribution")
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do |options|
    # match(type: "appstore")
    # snapshot
    build_and_archive(export_method: "app-store", provisioning_profile: "RSSReader Distribution")
    deliver(force: true)
    # frameit
  end

end
